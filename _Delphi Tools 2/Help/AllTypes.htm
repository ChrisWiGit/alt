<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<META name="GENERATOR" content="DIPasDoc 0.8.0">
<TITLE>Alle Typen</TITLE>
<LINK rel="StyleSheet" href="Hilfe.css">
</HEAD>
<BODY bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#800080" alink="#FF0000">
<H1>Alle Typen</H1>
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="#e0e0e0"><TH>Name</TH><TH>Unit</TH><TH>Beschreibung</TH></TR> 
<TR bgcolor=#efefef valign=top><TD><A href="dtSysUtils.htm#495">CRCT</A></TD>
<TD><A href="dtSysUtils.htm">dtSysUtils</A></TD>
<TD width=100%>CRCT ist eine CRC-Tabelle, die in <CODE><A href="dtSysUtils.htm#497">calcCRC32</A></CODE> geltung findet</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtResource.htm#328">ImageType</A></TD>
<TD><A href="dtResource.htm">dtResource</A></TD>
<TD>ImageType wird von <CODE><A href="dtResource.htm#339">LoadIconFromExe</A></CODE> verwendet, um den R&uuml;ckgabewert zu bestimmen</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#426">T16HexBit</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtTime.htm#503">TBeats</A></TD>
<TD><A href="dtTime.htm">dtTime</A></TD>
<TD>TBeats ist der Typ, der Beatsschl&auml;ge aufnimmt.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtMultimedia.htm#266">TBitmapRec</A></TD>
<TD><A href="dtMultimedia.htm">dtMultimedia</A></TD>
<TD>F&uuml;r <CODE><A href="dtMultimedia.htm#286">SaveImageListFileToStream</A></CODE> und  wird TBitmapRec benutzt. UseBitmap gibt an, ob ein Bitmap verwendet werden soll. Bitmap gibt das Bild an. UseMask gibt an, ob eine Maske (schwarz-wei&szlig; Bild) verwendet werden soll. Mask beinhaltet das Maskenbild</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#74">TButtonStyle</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>TButtonStyle wird von BorderButton verwendet und definiert das Aussehen eines Buttons. Statisch - Flach und Normal</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#427">TCallCompareString</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>TCallCompareString wird von <CODE><A href="dtStrings.htm#448">FindStringCall</A></CODE> verwendet, um benutzerdefiniert in einer StringListe zu suchen. Index ist der aktuelle Indexwert in der Stringliste. Stringname der Text an der Stelle Index. StrObject bezeichnet den Data-Wert (kann nil sein) und CompareWithStr ist der Text, welcher FindStringCall &uuml;bergeben wurde, um nach ihm zu suchen.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#428">TCharArray</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>Anzahl von Zeichen , ohne da&szlig; doppelte mitgez&auml;hlt worden sind/ f&uuml;r Zahlen : = 0</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDialogs.htm#105">TDialogData</A></TD>
<TD><A href="dtDialogs.htm">dtDialogs</A></TD>
<TD>TDialogData wird von <CODE><A href="dtDialogs.htm#112">DefPassWordDlg</A></CODE> und <CODE><A href="dtDialogs.htm#116">GetDialogData</A></CODE> verwendet, um den Dialog wunschgerecht darzustellen. Owner ist der Besitzer des Dialogs. PassWord das Passwort, dass eingegeben werden muss. MasterPassWord das MasterPasswort (als zweites Passwort), um durchzukommen. MinLength die kleinste Gr&ouml;&szlig;e des Passwortes, MaxLength die gr&ouml;&szlig;te M&ouml;glichkeit. PassWordChar ist das Zeichen, dass statt dem eingegeben ausgegeben wird. CaseSensitive sagt aus, ob zwischen Gro&szlig;- und Kleinschreibung unterschieden wird. Caption beinhaltet die &Uuml;berschrift des Passwort-Dialoges. AllowDelPassWord gibt an, ob das Passwort gel&ouml;scht werden darf oder ob es immer NEU angegeben werden muss. MasterPassWordUsed gibt nach dem Beenden an, ob ein MasterPassword benutzt worden ist. PassWordDeleted gibt nach dem Beenden an, ob das Passwort gel&ouml;scht wurde.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#170">TDriveRoot</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#171">TDriveType</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#172">TDriveTypes</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtMultimedia.htm#267">TDSoundState</A></TD>
<TD><A href="dtMultimedia.htm">dtMultimedia</A></TD>
<TD>TDSoundState wird von <CODE><A href="dtMultimedia.htm#284">LockSound</A></CODE> verwendet, um den aktuellen Status setzen zu k&ouml;nnen. DSS_Locked gibt an, dass der Lautsprecher verwendet wird. DSS_UnLocked gibt an, dass der Lautsprecher nicht verwendet wird. DSS_RET gibt nur den aktuellen Status von SoundLock zur&uuml;ck</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#429">TEnumCharRec</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>TEnumCharRec wird von <CODE><A href="dtStrings.htm#443">EnumChars</A></CODE> und <CODE><A href="dtStrings.htm#451">GetCharCount</A></CODE> verwendet, um den R&uuml;ckgabewert zu bestimmen. CharCount entspricht der Anzahl von einzelnen Zeichen, Count der Gesamtzahl aller Zeichen. SingelCharCount ist die Anzahl von Zeichen , ohne da&szlig; doppelte mitgez&auml;hlt worden sind/ f&uuml;r Zahlen : = 0</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#173">TFileAttribute</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#174">TFileAttributes</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#175">TFileInfo</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#176">TFileType</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtRegistry.htm#303">TFontData</A></TD>
<TD><A href="dtRegistry.htm">dtRegistry</A></TD>
<TD>TFontData enth&auml;lt die Daten eines Fonts, die in einem Stream gespeichert werden. Die Bezeichner sind dieselben, wie in TFont.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#177">TFreeSpaceRec</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>address of name of file system</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtTime.htm#504">TGMT</A></TD>
<TD><A href="dtTime.htm">dtTime</A></TD>
<TD>TGMT ist ein Green-Wich-Mean-Time-Typ, der angibt welche Zeitzone verwendet wird.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtNetwork.htm#291">TIPData</A></TD>
<TD><A href="dtNetwork.htm">dtNetwork</A></TD>
<TD>TIPData wird von <CODE><A href="dtNetwork.htm#299">GetIPData</A></CODE> verwendet, um IP-Addressen (nicht v6!) n&auml;her darzustellen. s1 bis s4 stellen die einzelnen IP-Segmente als Integer dar. Port den Kommunikationsport, der hinter manchen IPs durch ein ":" getrennt wird. Bin die IP-Addresse als Bin&auml;re schreibweise</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtNetwork.htm#292">TIPResult</A></TD>
<TD><A href="dtNetwork.htm">dtNetwork</A></TD>
<TD>TIPResult wird nicht mehr verwendet und besteht nur noch wegen der Abw&auml;rtskompatibilit&auml;t</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtRegistry.htm#304">TKEY</A></TD>
<TD><A href="dtRegistry.htm">dtRegistry</A></TD>
<TD>TKEY ist ein Delphi-Typ, der den unflexiblen HKEY-Typ kopiert</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtResource.htm#329">TLoadType</A></TD>
<TD><A href="dtResource.htm">dtResource</A></TD>
<TD>TLoadType wird von <CODE><A href="dtResource.htm#339">LoadIconFromExe</A></CODE> verwendet, um festzustellen wie mit der Resource umgegangen werden soll</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDirectSocketProtokoll.htm#152">TMessageType</A></TD>
<TD><A href="dtDirectSocketProtokoll.htm">dtDirectSocketProtokoll</A></TD>
<TD>Mit TMessageType kann die Typ-Gr&ouml;&szlig;e von Msg und SubMsg schnell ge&auml;ndert werden</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSocketProtokoll.htm#379">TMessageType</A></TD>
<TD><A href="dtSocketProtokoll.htm">dtSocketProtokoll</A></TD>
<TD>Mit TMessageType kann die Typ-Gr&ouml;&szlig;e von Msg und SubMsg schnell ge&auml;ndert werden</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#75">TOnAdd</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>TOnAdd wird von CreateDirTreeView, GetNodeByText, GetSubNode und InsertDir verwendet, um das Verhalten vor dem Einf&uuml;gen eines Knotens in den Baum zu kontrollieren. Node beschreibt den einzuf&uuml;gendenden Knoten. Path beschreibt den vollst&auml;ndigen Pfad bis zu diesem Knoten als String. CanAdd gibt an, ob dieser Knoten eingef&uuml;gt werden soll.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#76">TOnClearNode</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>Wird von ClearNodes vor dem l&ouml;schen aufgerufen,wenn programm-spezifische Daten des Baumeeintrages gel&ouml;scht werden soll. Dieses Ereignis wird in Klassen verwendet</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#77">TOnClearNode2</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>Wird von ClearNodes vor dem l&ouml;schen aufgerufen,wenn programm-spezifische Daten des Baumeeintrages gel&ouml;scht werden soll. Dieses Ereignis wird in Units verwendet.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#430">TOnDataRead</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>TOnDataWrite wird von <CODE><A href="dtStrings.htm#459">LoadStringsFromStream</A></CODE> verwendet, um benutzerdefinierte Daten mit aus dem Stream zu laden.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStrings.htm#431">TOnDataWrite</A></TD>
<TD><A href="dtStrings.htm">dtStrings</A></TD>
<TD>TOnDataWrite wird von <CODE><A href="dtStrings.htm#464">SaveStringsToStream</A></CODE> verwendet, um benutzerdefinierte Daten mit in den Stream zu speichern.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDialogs.htm#106">TOnDialogControlRead</A></TD>
<TD><A href="dtDialogs.htm">dtDialogs</A></TD>
<TD>TOnDialogControlRead wird aufgerufen, wenn ein Kontrollelement gelesen wird</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDialogs.htm#107">TOnDialogControlWrite</A></TD>
<TD><A href="dtDialogs.htm">dtDialogs</A></TD>
<TD>TOnDialogControlWrite wird aufgerufen, wenn ein Kontrollelement geschrieben wird</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDialogs.htm#108">TOnExtraPaint</A></TD>
<TD><A href="dtDialogs.htm">dtDialogs</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="SplashForm.htm#568">TOnExtraPaint</A></TD>
<TD><A href="SplashForm.htm">SplashForm</A></TD>
<TD>TOnExtraPaint ist das Ereignis, dass aufgerufen wird, wenn etwas auf den Dialog gezeichnet werden soll.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#388">TOnExtReadFileData</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnExtReadFileData wird aufgerufen, wenn BenutzerDaten aus der Datei gelesen und die Version manuell verglichen werden soll. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird in Klassen als Ereignis verwendet. Siehe <CODE><A href="dtStream.htm#399">ReadFileExtended</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtWindows.htm#534">TOnFindWindowObj</A></TD>
<TD><A href="dtWindows.htm">dtWindows</A></TD>
<TD>TOnFindWindowProc wird von <CODE><A href="dtWindows.htm#541">FindWindows</A></CODE> aufgerufen, wenn ein Fenster von FindWindows gefunden wurde. WindowText ist der Titeltext, WindowHandle das Fensterhandle. Add gibt an, ob diese Fenster in die Liste aufgenommen werden soll (TRUE). Wenn Continue TRUE ist, wird nach dem n&auml;chsten Fenster gesucht. Diese Ereignismethode wird in Klassen verwendet.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtWindows.htm#535">TOnFindWindowProc</A></TD>
<TD><A href="dtWindows.htm">dtWindows</A></TD>
<TD>TOnFindWindowProc wird von <CODE><A href="dtWindows.htm#541">FindWindows</A></CODE> aufgerufen, wenn ein Fenster von FindWindows gefunden wurde. WindowText ist der Titeltext, WindowHandle das Fensterhandle. Add gibt an, ob diese Fenster in die Liste aufgenommen werden soll (TRUE). Wenn Continue TRUE ist, wird nach dem n&auml;chsten Fenster gesucht.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#78">TOnNode</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>TOnNode wird von GetAllNodes aufgerufen, wenn durch alle Knoten des Baumes gesprungen wird. Dieses Ereignis wird in Klassen verwendet</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#79">TOnNode2</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>TOnNode wird von GetAllNodes aufgerufen, wenn durch alle Knoten des Baumes gesprungen wird. Dieses Ereignis wird in Units verwendet.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#389">TOnReadCompatibledFileData</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnReadCompatibledFileData wird aufgerufen, wenn BenutzerDaten aus der Datei gelesen werden sollen. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird in Klassen als Ereignis verwendet. Siehe <CODE><A href="dtStream.htm#398">ReadFileCompatible</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#390">TOnReadFileData</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnReadFileData wird aufgerufen, wenn BenutzerDaten aus der Datei gelesen werden sollen. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird in Klassen als Ereignis verwendet. Siehe <CODE><A href="dtStream.htm#397">ReadFile</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#391">TOnReadFileDataStd</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnReadFileDataStd wird aufgerufen, wenn BenutzerDaten aus der Datei gelesen werden sollen. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird als Ereignisfunktion auserhalb von Klassen verwendet. Siehe <CODE><A href="dtStream.htm#402">ReadFileStd</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSocketProtokoll.htm#380">TOnSendMessage</A></TD>
<TD><A href="dtSocketProtokoll.htm">dtSocketProtokoll</A></TD>
<TD>TOnSendMessage wird aufgerufen, wenn eine Nachricht gesendet wird. Count = Anzahl von Sendeversuchen; WaitTime = Anzahl von Milisekunden , die gewartet werden sollen , bis ein weiterer Sende-Versuch gemacht werden. (Standard = 10); Break = Abbruch des Sende-Versuch</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#392">TOnStreamingNode</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnStreamingNode wird aufgerufen, wenn ein Knoten gelesen oder geschrieben werden soll. Stream , ist der Stream in den geschrieben oder aus dem gelesen wird. Node ist der Knoten , der geschrieben oder gelesen werden soll. Sie wird in Klassen als Ereignis verwendet. Der R&uuml;ckgabewert sind die geschriebenen oder gelesenen Bytes.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#393">TOnStreamingNode2</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnStreamingNode2 wird aufgerufen, wenn ein Knoten gelesen oder geschrieben werden soll. Stream , ist der Stream in den geschrieben oder aus dem gelesen wird. Node ist der Knoten , der geschrieben oder gelesen werden soll Sie wird als Ereignisfunktion auserhalb von Klassen verwendet. Der R&uuml;ckgabewert sind die geschriebenen oder gelesenen Bytes</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#394">TOnWriteFileData</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnWriteFileData wird aufgerufen, wenn BenutzerDaten in die Datei geschrieben werden sollen. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird in Klassen als Ereignis verwendet. Siehe <CODE><A href="dtStream.htm#413">WriteFile</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtStream.htm#395">TOnWriteFileDataStd</A></TD>
<TD><A href="dtStream.htm">dtStream</A></TD>
<TD>TOnWriteFileDataStd wird aufgerufen, wenn BenutzerDaten in die Datei geschrieben werden sollen. Der R&uuml;ckgabewert ist die Anzahl der geschriebenen Bytes. Sie wird als Ereignisfunktion auserhalb von Klassen verwendet. Siehe <CODE><A href="dtStream.htm#414">WriteFileStd</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtMultimedia.htm#268">TOrientation</A></TD>
<TD><A href="dtMultimedia.htm">dtMultimedia</A></TD>
<TD>TOrientation wird von <CODE><A href="dtMultimedia.htm#278">JoinBitmaps</A></CODE> und <CODE><A href="dtMultimedia.htm#279">JoinBitmapsI</A></CODE> verwendet, um die Ausrichtung der anhgeh&auml;ngten Bilder anzugeben. orVertical bedeutet, dass die Bilder vertikal (|) angeh&auml;ngt werden, orHorizontal demnach horizontal. (-)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSysUtils.htm#496">TPascalError</A></TD>
<TD><A href="dtSysUtils.htm">dtSysUtils</A></TD>
<TD>TPascalError wird in <CODE><A href="dtSysUtils.htm#500">ValidatePascalIdentfier</A></CODE> und <CODE><A href="dtSysUtils.htm#499">ValidateAnchorIdentfier</A></CODE> verwendet, um Fehler darzustellen. pe_InvalidChar bedeutet ein ung&uuml;ltiges zeichen in Ident. pe_NoIdent bedeutet, dass Ident aus mehreren W&ouml;rtern besteht , die mit Leerzeichen getrennt sind pe_InvalidIdent bedeutet, dass der Bezeichner mit einer Zahl anf&auml;ngt.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtMath.htm#244">TPercent</A></TD>
<TD><A href="dtMath.htm">dtMath</A></TD>
<TD>TScreens wird von <CODE><A href="dtMath.htm#259">ScreenToPercent</A></CODE> und <CODE><A href="dtMath.htm#257">PercentToScreen</A></CODE> verwendet, um Breite und H&ouml;he des Bildschirms in Prozent zu speichern</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtWindows.htm#536">TRegisterFile</A></TD>
<TD><A href="dtWindows.htm">dtWindows</A></TD>
<TD>Installiert/Registriert eine Datei in Windows mit <CODE><A href="dtWindows.htm#554">RegisterFile</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtResource.htm#330">TResType</A></TD>
<TD><A href="dtResource.htm">dtResource</A></TD>
<TD>TResType gibt an, um was f&uuml;r eine Art von Resourcentyp es sich handelt</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtMath.htm#245">TScreens</A></TD>
<TD><A href="dtMath.htm">dtMath</A></TD>
<TD>TScreens wird von <CODE><A href="dtMath.htm#259">ScreenToPercent</A></CODE> und <CODE><A href="dtMath.htm#257">PercentToScreen</A></CODE> verwendet, um Breite und H&ouml;he des Bildschirms zu speichern</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSignature.htm#350">TSignatureRec</A></TD>
<TD><A href="dtSignature.htm">dtSignature</A></TD>
<TD>TSignatureRec enth&auml;lt alle Textdaten die als Signatur gespeichert gelesen werden soll. SignatureStr und SubSignature beinhaltet einen beliebigen String, der beim Lesen der Datei veglichen werden wird. Programmer,Company,CopyRight,Notice,Comment,FileName,FileTyp sind Informationen, die dem leichteren Identifizieren der Datei f&uuml;r den Benutzer dienen. DateTime,TimeStamp beinhaltet den originalen Zeitstempel der Datei.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSignature.htm#351">TSignVersion</A></TD>
<TD><A href="dtSignature.htm">dtSignature</A></TD>
<TD>TSignVersion setzt <CODE><A href="dtSignature.htm#350">TSignatureRec</A></CODE> und <CODE><A href="dtSignature.htm#353">TVersionRec</A></CODE> zusammen, um eine leichtere Handhabung zu gew&auml;hrleisten.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSignature.htm#352">TSignVersionCompUsrFunc</A></TD>
<TD><A href="dtSignature.htm">dtSignature</A></TD>
<TD>TSignVersionCompUsrFunc wird von <CODE><A href="dtSignature.htm#366">ReadValidSignVersion</A></CODE> , <CODE><A href="dtSignature.htm#358">EqualSignVersion</A></CODE> und <CODE><A href="dtSignature.htm#359">EqualSignVersionMin</A></CODE> aufgerufen , wenn deren Parameter SignVersionCompUsrFunc ungleich nil ist, und damit eine eigene Vergleichsfunktion f&uuml;r die Version erfolgen soll. Die Paramater werden den Funktionen wie folgt &uuml;bergeben : ReadValidSignVersion : SignVersionCompUsrFunc(SignatureData,0); EqualSignVersion : SignVersionCompUsrFunc(SignatureData1,SignatureData2); EqualSignVersionMin : SignVersionCompUsrFunc(SignatureData1,SignatureData2);</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#178">TSpecDirectory</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>address of total number of clusters</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtCL.htm#80">TStateType</A></TD>
<TD><A href="dtCL.htm">dtCL</A></TD>
<TD>TStateTyp gibt an was mit dem Control passieren soll - wird u.a. von ChangeControlsState verwendet</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtDialogs.htm#109">TStreamType</A></TD>
<TD><A href="dtDialogs.htm">dtDialogs</A></TD>
<TD>TStreamType - In einen Stream schreiben oder lesen. Wird u.a. in <CODE><A href="dtDialogs.htm#111">DefOnDialogControlStream</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#179">TTypeDirectory</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>File system directory that serves as a common repository for Internet history items.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtTime.htm#505">TTZIResult</A></TD>
<TD><A href="dtTime.htm">dtTime</A></TD>
<TD>TTZIResult gibt die R&uuml;ckgabewerte von <CODE><A href="dtTime.htm#515">GetActualTimeZone</A></CODE> an (zi_ok - R&uuml;ckgabewert ist in Ordnung zi_unknow - R&uuml;ckgabewert ist nicht definiert zi_unexact - R&uuml;ckgabewert ist eine Auswahl aus mehreren m&ouml;glichen Zeitzonen</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtSignature.htm#353">TVersionRec</A></TD>
<TD><A href="dtSignature.htm">dtSignature</A></TD>
<TD>TVersionRec beinhaltet die Dateiversion als Integer-Wert sowie Hi und Lo Byte.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#180">TVolumeRecord</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="dtFiles.htm#181">TWriteProc</A></TD>
<TD><A href="dtFiles.htm">dtFiles</A></TD>
<TD>R&uuml;ckgabewert mu&szlig; die Anzahl der geschriebenen Bytes sein</TD>
</TR>
</TABLE>
<HR noshade size=1><EM>Generated on Thu 13 Feb 2003 15:52:28</EM>
</BODY>
</HTML>
